name: iOS binary build & upload
 
on:
  pull_request:
  push:
    branches:
      - master
 
jobs:
  build:
    runs-on: macOS-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v2

    # - name: Install the Apple certificate and provisioning profile
    #   env:
    #     BUILD_CERTIFICATE_BASE64: ${{ secrets.CERTIFICATES_FILE_BASE64 }}
    #     P12_PASSWORD: ${{ secrets.CERTIFICATES_PASSWORD }}
    #     BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
    #     KEYCHAIN_PASSWORD: ${{ secrets.CERTIFICATES_PASSWORD }}
    #     ASC_PRIVATE_KEY: ${{ secrets.ASC_PRIVATE_KEY }}
    #   run: |
    #     # create variables
    #     CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
    #     PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
    #     KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

    #     mkdir -p ~/.private_keys

    #     # import certificate and provisioning profile from secrets
    #     echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
    #     echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
    #     echo -n "$ASC_PRIVATE_KEY" | base64 --decode --output ~/.private_keys/AuthKey_K448V232WX.p8

    #     # create temporary keychain
    #     security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
    #     security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
    #     security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

    #     # import certificate to keychain
    #     security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
    #     security list-keychain -d user -s $KEYCHAIN_PATH

    #     # apply provisioning profile
    #     mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
    #     cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

    - name: Export iOS
      env:
        GODOT_VERSION: "3.4.4"
        PRESET: "iOS"
        BUILD_DIR: build
        FILENAME: ios
      run: |
        wget -q https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION}/mono/Godot_v${GODOT_VERSION}-stable_mono_osx.universal.zip
        unzip Godot_v${GODOT_VERSION}-stable_mono_osx.universal.zip
        export XDG_DATA_HOME="$(pwd)/xdg_data_home"
        export TEMPLATES_DIR="${XDG_DATA_HOME}/godot/templates/${GODOT_VERSION}.stable.mono/"
        mkdir -p ${TEMPLATES_DIR}
        wget -q https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION}/mono/Godot_v${GODOT_VERSION}-stable_mono_export_templates.tpz
        unzip Godot_v${GODOT_VERSION}-stable_mono_export_templates.tpz
        mv templates/* ${TEMPLATES_DIR}
        mkdir -p ${BUILD_DIR}
        Godot_mono.app/Contents/MacOS/Godot --path strategy --export "${PRESET}" "../${BUILD_DIR}/${FILENAME}"
        
    # - uses: Apple-Actions/upload-testflight-build@master
    #   with:
    #     app-path: ${BUILD_DIR}/${FILENAME}
    #     issuer-id: ${{ secrets.ASC_ISSUER_ID }}
    #     api-key-id: ${{ secrets.ASC_KEY_ID }}
    #     api-private-key: ${{ secrets.ASC_PRIVATE_KEY }}